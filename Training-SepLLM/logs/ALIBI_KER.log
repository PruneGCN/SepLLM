[2024-12-28 09:49:26,935] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
NeoXArgs.from_ymls() ['../../sample_configs/sepllm-160m-on-pythia-with-pile_deduped-n64HT-kernel_recompile_alibiBiPE.yml']
INFO:root:NeoXArgs.calculate_derived() Total number of GPUs determined to be: 8
-------------------- arguments --------------------
  attention_config ................ ['global', 'global', 'global', 'global', 'global', 'global', 'global', 'global', 'global', 'global', 'global', 'global']updated
  batch_size ...................... 32..........................updated
  bias_gelu_fusion ................ True........................updated
  BiPE_seps ....................... [15, 13, 32, 2, 28, 27, 209, 186, 187]updated
  checkpoint_activations .......... True........................updated
  checkpoint_factor ............... 1000........................updated
  config_files .................... {'sepllm-160m-on-pythia-with-pile_deduped-n64HT-kernel_recompile_alibiBiPE.yml': '{\n  # ##########Debug##########\n  #   "world_size": 1,\n  #   "num_gpus": 1,\n  # ########################\n\n  # parallelism settings\n  "pipe-parallel-size": 1,\n  "model-parallel-size": 1,\n\n  # model settings\n  "num-layers": 12,\n  "hidden-size": 768,\n  "num-attention-heads": 12,\n  "seq-length": 2048,\n  "max-position-embeddings": 2048,\n  "pos-emb": "alibi",\n  "rotary-pct": 0.25,\n  "no-weight-tying": true,\n  "gpt-j-residual": true,\n  "output-layer-parallelism": "column",\n  "attention-config": [[["global"], 12]], \n\n  "scaled_masked_softmax_fusion": true, # For SepLLM\n  "bias-gelu-fusion": true,\n\n  # init methods\n  "init_method": "small_init",\n  "output_layer_init_method": "wang_init",\n\n  "optimizer": {\n    "type": "Adam",\n    "params": {\n      "lr": 0.0006,\n      "betas": [0.9, 0.95],\n      "eps": 1.0e-8\n    }\n  },\n  "min_lr": 0.00006,\n\n  "zero_optimization": {\n    "stage": 1,\n    "allgather_partitions": true,\n    "allgather_bucket_size": 500000000,\n    "overlap_comm": true,\n    "reduce_scatter": true,\n    "reduce_bucket_size": 500000000,\n    "contiguous_gradients": true,\n    "cpu_offload": false\n  },\n\n  # batch size (trained on 32 gpus)\n  "train_micro_batch_size_per_gpu": 32, # For 8 cards: if your GPU memory is not enough, you can set 64x2, 32x4, 16x8, etc., for 8 cards\' machine, to keep the global train_batch_size as 1024.\n  "gradient_accumulation_steps": 4,  # For 8 cards: if your GPU memory is not enough, you can set 64x2, 32x4, 16x8, etc., for 8 cards\' machine, to keep the global train_batch_size as 1024.\n  "data-impl": "mmap",\n  "num_workers": 1,\n\n  # activation checkpointing\n  "checkpoint-activations": true,\n  "checkpoint-num-layers": 1,\n  "partition-activations": true,\n  "synchronize-each-layer": true,\n\n  # regularization\n  "gradient_clipping": 1.0,\n  "weight-decay": 0.1,\n  "hidden-dropout": 0,\n  "attention-dropout": 0,\n\n  # precision settings\n  "fp16": {\n    "fp16": true,\n    "enabled": true,\n    "loss_scale": 0,\n    "loss_scale_window": 1000,\n    "initial_scale_power": 12,\n    "hysteresis": 2,\n    "min_loss_scale": 1\n  },\n\n  "train-iters": 143000,\n  "lr-decay-iters": 143000,\n  "distributed-backend": "nccl",\n  "lr-decay-style": "cosine",\n  "warmup": 0.01,\n  "checkpoint-factor": 1000,\n  "extra-save-iters": [0,1,2,4,8,16,32,64,128,256,512],\n  "eval-interval": 4000, \n  "eval-iters": 10,\n\n  "log-interval": 10,\n  "steps_per_print": 10,\n  "wall_clock_breakdown": true,\n\n  "train-data-paths": ["/lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document"],\n  "valid-data-paths": ["/lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document"],\n  "test-data-paths": ["/lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document"],\n\n  "tokenizer-type": "HFTokenizer",\n  "vocab-file": "/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/sample_configs/20B_tokenizer.json",\n\n  "launcher": "pdsh",\n\n  # "save": "path/to/SepLLM-160m/checkpoints_n64ht_8cards_kernel_recompile",\n  # "load": "path/to/SepLLM-160m/checkpoints_n64ht_8cards_kernel_recompile",\n  \n  ####################################################################### SepLLM #######################################################################:\n  # "hostfile": "path/to/SepLLM/Training-SepLLM/sample_configs/hostfile",\n\n  \'separator_token_ids\': [15, 13, 32, 2, 28, 27, 209, 186, 187], # For Pythia tokenizer  ## Fixed; The token ids for the special tokens (i.e. separators):  [\'.\', \',\', \'?\', \'!\', \';\', ":", \' \', \'\\t\',\'\\n\'].\n  \'PADDING_ID\': 0 , # For Pythia tokenizer  ## Fixed; The id for padding token of Pythia (GPT_NeoX)\n  \n\n  \'USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS\'  :   True,  # If True: the prefilling local window sizes for different self-attention layers are different; If True: should set \'prefill_loc_win_size_list\', else: should set \'prefill_local_window_size\'\n  \'USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS\' :   True,  # If True: the generating local window sizes for different self-attention layers are different; If True: should set \'generate_win_loc_size_list\', else: should set \'generate_local_window_size\'. USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS does not have any effect during the pretraining/prefilling phase.    \n\n  \'prefill_loc_win_size_list\' : [2048,   64,   64,   64,   64,   64,   64,   64,   64,   64, \n                                 64,   2048],            ## The local window sizes for different self-attention layers when training (or prefilling). KVs for tokens inside the local window (we call them \'Neighboring Tokens\') are kept and can been seen by the current token.                      \n\n  \'generate_win_loc_size_list\': [2048,   64,   64,   64,   64,   64,   64,   64,   64,   64, \n                                 64,   2048],            ## The local window sizes for different self-attention layers when generating. KVs for tokens inside the local window (we call them \'Neighboring Tokens\') are kept and can been seen by the current token. generate_win_loc_size_list does not have any effect during the pretraining/prefilling phase.\n\n  \'init_tok_max_idx\' :  2, # The largest index for the kept initial tokens. E.g., if init_tok_max_idx==2, it means we keep 3 initial tokens (idx: 0,1,2)\n  ######################################There should be at most 1 True for the following 3 args ##############################################\n  \'USE_ORIGINAL_FULL_ATTEN\' : False,  # Flag signal with the highest priority.  Train the Pythia model without any modification (standard full-attention version, i.e., standard upper triangular mask) if True.\n  \'streamingLLM\' :  False,  # Train streamingLLM. Only takes effect when USE_ORIGINAL_FULL_ATTEN=False. \n  \'USE_SEP_ATTN_KERNEL_ACCELERATOR\': True, # If True, use Sep_Attention module\'s kernel accelerator to accelerate the training process of SepLLM. If False (together with USE_ORIGINAL_FULL_ATTEN=False and streamingLLM=False), run plain SepLLM\n  ######################################There should be at most 1 True for the above 3 args ##############################################\n\n  ###############You can set RECOMPILE_SEP_ATTN_KERNEL=True if you have enough GPU memory#################\n  \'RECOMPILE_SEP_ATTN_KERNEL\': True,  # False by default. If True, recompile the Sep_Attention kernels.  When set to True, it may require more GPU memory and provide a certain level of acceleration to the training process.\n  ###############You can set RECOMPILE_SEP_ATTN_KERNEL=True if you have enough GPU memory#################\n\n  \'BATCH_ADAPTIVE_INIT_POS\' : False,  # False by default.  If True: use the floating initial tokens\' starting positions since when evaluating, LLM usually add paddings on the left side of the shorter seqs in a batch for alignment (i.e., left padding). Can be False when pretraining since the starting positions of initial tokens are at the beginning of each sequence in a batch for pretraining (i.e., right padding)\n  \'PRINT_KV_RATIO\' :  True,  # If True, print the KV cache preservation ratio (especially for the released trained model during generating). When pretraining, it will also print the retention ratio for the computational complexity of calculating the attention map if it is set True\n  \'print_ratio_intervals\': 8000,   # Print the retention ratio for the computational complexity of calculating the attention map once after every \'print_ratio_intervals\' forward passes (or print_ratio_intervals/gradient_accumulation_steps  iterations). It only takes effect when PRINT_KV_RATIO=True.    \n\n  \'USE_BiPE\':  True,  # False by default. If True (must also set pos_emb=\'rotary\' or \'alibi\'), use Bilevel Positional Encoding [He, Zhenyu, et al. "Two stones hit one bird: Bilevel positional encoding for better length extrapolation." arXiv preprint arXiv:2401.16421 (2024).].\n  \'BiPE_seps\': [ 15, 13, 32, 2, 28, 27, 209, 186, 187 ],  # The token ids of the seperator tokens for BiPE. e.g.,  [\'.\', \',\', \'?\', \'!\', \';\', ":", \' \', \'\\t\',\'\\n\'] \n  ####################################################################### ### #######################################################################\n}\n'}updated
  data_impl ....................... mmap........................updated
  dynamic_loss_scale .............. True........................updated
  eval_interval ................... 4000........................updated
  eval_iters ...................... 10..........................updated
  extra_save_iters ................ [0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512]updated
  fp16 ............................ {'fp16': True, 'enabled': True, 'loss_scale': 0, 'loss_scale_window': 1000, 'initial_scale_power': 12, 'hysteresis': 2, 'min_loss_scale': 1}updated
  generate_win_loc_size_list ...... [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]updated
  global_num_gpus ................. 8...........................updated
  gpt_j_residual .................. True........................updated
  gradient_accumulation_steps ..... 4...........................updated
  hidden_size ..................... 768.........................updated
  init_method ..................... small_init..................updated
  is_pipe_parallel ................ True........................updated
  log_interval .................... 10..........................updated
  lr .............................. 0.0006......................updated
  lr_decay_iters .................. 143000......................updated
  lr_decay_style .................. cosine......................updated
  max_position_embeddings ......... 2048........................updated
  min_lr .......................... 6e-05.......................updated
  no_weight_tying ................. True........................updated
  num_attention_heads ............. 12..........................updated
  num_layers ...................... 12..........................updated
  num_workers ..................... 1...........................updated
  optimizer ....................... {'type': 'Adam', 'params': {'lr': 0.0006, 'betas': [0.9, 0.95], 'eps': 1e-08}}updated
  optimizer_type .................. Adam........................updated
  output_layer_init_method ........ wang_init...................updated
  partition_activations ........... True........................updated
  pipe_parallel_size .............. 1...........................updated
  pos_emb ......................... alibi.......................updated
  precision ....................... fp16........................updated
  prefill_loc_win_size_list ....... [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]updated
  PRINT_KV_RATIO .................. True........................updated
  RECOMPILE_SEP_ATTN_KERNEL ....... True........................updated
  rotary_pct ...................... 0.25........................updated
  save_iters ...................... [0, 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 26000, 27000, 28000, 29000, 30000, 31000, 32000, 33000, 34000, 35000, 36000, 37000, 38000, 39000, 40000, 41000, 42000, 43000, 44000, 45000, 46000, 47000, 48000, 49000, 50000, 51000, 52000, 53000, 54000, 55000, 56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000, 78000, 79000, 80000, 81000, 82000, 83000, 84000, 85000, 86000, 87000, 88000, 89000, 90000, 91000, 92000, 93000, 94000, 95000, 96000, 97000, 98000, 99000, 100000, 101000, 102000, 103000, 104000, 105000, 106000, 107000, 108000, 109000, 110000, 111000, 112000, 113000, 114000, 115000, 116000, 117000, 118000, 119000, 120000, 121000, 122000, 123000, 124000, 125000, 126000, 127000, 128000, 129000, 130000, 131000, 132000, 133000, 134000, 135000, 136000, 137000, 138000, 139000, 140000, 141000, 142000]updated
  scaled_masked_softmax_fusion .... True........................updated
  separator_token_ids ............. [15, 13, 32, 2, 28, 27, 209, 186, 187]updated
  seq_length ...................... 2048........................updated
  sparsity_config ................. {}..........................updated
  synchronize_each_layer .......... True........................updated
  test_data_paths ................. ['/lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document']updated
  test_data_weights ............... [1.0].......................updated
  text_gen_type ................... unconditional...............updated
  tokenizer_type .................. HFTokenizer.................updated
  train_batch_size ................ 1024........................updated
  train_data_paths ................ ['/lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document']updated
  train_data_weights .............. [1.0].......................updated
  train_iters ..................... 143000......................updated
  train_micro_batch_size_per_gpu .. 32..........................updated
  USE_BiPE ........................ True........................updated
  USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS  True.................updated
  USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS  True..................updated
  user_script ..................... ../../train.py..............updated
  valid_data_paths ................ ['/lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document']updated
  valid_data_weights .............. [1.0].......................updated
  vocab_file ...................... /lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/sample_configs/20B_tokenizer.jsonupdated
  wall_clock_breakdown ............ True........................updated
  zero_allgather_bucket_size ...... 500000000...................updated
  zero_contiguous_gradients ....... True........................updated
  zero_optimization ............... {'stage': 1, 'allgather_partitions': True, 'allgather_bucket_size': 500000000, 'overlap_comm': True, 'reduce_scatter': True, 'reduce_bucket_size': 500000000, 'contiguous_gradients': True, 'cpu_offload': False}updated
  zero_reduce_bucket_size ......... 500000000...................updated
  zero_reduce_scatter ............. True........................updated
  zero_stage ...................... 1...........................updated
  account ......................... None........................default
  activation ...................... gelu........................default
  activation_checkpointing ........ None........................default
  adlr_autoresume ................. False.......................default
  adlr_autoresume_interval ........ 1000........................default
  allow_chopped ................... True........................default
  amp ............................. None........................default
  apply_query_key_layer_scaling ... False.......................default
  attention_dropout ............... 0...........................default
  attention_softmax_in_fp32 ....... False.......................default
  autotuning ...................... None........................default
  autotuning_run .................. None........................default
  base_shapes_file ................ None........................default
  BATCH_ADAPTIVE_INIT_POS ......... False.......................default
  bf16 ............................ None........................default
  bias_dropout_fusion ............. False.......................default
  char_level_ppl .................. False.......................default
  checkpoint ...................... None........................default
  checkpoint_in_cpu ............... False.......................default
  checkpoint_num_layers ........... 1...........................default
  checkpoint_scale ................ linear......................default
  checkpoint_validation_with_forward_pass  False................default
  clip_grad ....................... 1.0.........................default
  comment ......................... None........................default
  comms_logger .................... None........................default
  communication_data_type ......... None........................default
  compression_training ............ None........................default
  contiguous_checkpointing ........ False.......................default
  coord_check ..................... False.......................default
  create_moe_param_group .......... True........................default
  csv_monitor ..................... None........................default
  curriculum_learning ............. None........................default
  curriculum_seqlen ............... 0...........................default
  data_efficiency ................. None........................default
  data_path ....................... None........................default
  data_types ...................... None........................default
  deepscale ....................... False.......................default
  deepscale_config ................ None........................default
  deepspeed ....................... True........................default
  deepspeed_activation_checkpointing  True......................default
  deepspeed_extra_args ............ None........................default
  deepspeed_mpi ................... False.......................default
  deepspeed_slurm ................. False.......................default
  detect_nvlink_pairs ............. False.......................default
  distributed_backend ............. nccl........................default
  do_test ......................... None........................default
  do_train ........................ None........................default
  do_valid ........................ None........................default
  dump_state ...................... False.......................default
  elasticity ...................... None........................default
  enable_expert_tensor_parallelism  False.......................default
  eod_mask_loss ................... False.......................default
  eval_results_prefix ............. ............................default
  eval_tasks ...................... None........................default
  exclude ......................... None........................default
  EXCLUDE_DIAGONAL ................ True........................default
  exit_interval ................... None........................default
  expert_interval ................. 2...........................default
  finetune ........................ False.......................default
  flops_profiler .................. None........................default
  force_multi ..................... False.......................default
  fp16_lm_cross_entropy ........... False.......................default
  fp32_allreduce .................. False.......................default
  generate_k ...................... 0...........................default
  generate_local_window_size ...... 256.........................default
  git_hash ........................ None........................default
  gmlp_attn_dim ................... 64..........................default
  gpt_j_tied ...................... False.......................default
  gradient_clipping ............... 1.0.........................default
  gradient_noise_scale_cpu_offload  False.......................default
  gradient_noise_scale_n_batches .. 5...........................default
  gradient_predivide_factor ....... 1.0.........................default
  hidden_dropout .................. 0...........................default
  hostfile ........................ None........................default
  hysteresis ...................... 2...........................default
  include ......................... None........................default
  init_method_std ................. 0.02........................default
  init_tok_max_idx ................ 2...........................default
  intermediate_size ............... None........................default
  iteration ....................... None........................default
  keep_last_n_checkpoints ......... None........................default
  launcher ........................ pdsh........................default
  layernorm_epsilon ............... 1e-05.......................default
  layernorm_fusion ................ False.......................default
  lazy_mpu_init ................... False.......................default
  load ............................ None........................default
  local_rank ...................... None........................default
  log_dir ......................... None........................default
  log_grad_norm ................... False.......................default
  log_grad_pct_zeros .............. False.......................default
  log_gradient_noise_scale ........ False.......................default
  log_optimizer_states ............ False.......................default
  log_param_norm .................. False.......................default
  loss_scale ...................... None........................default
  loss_scale_window ............... 1000.0......................default
  make_vocab_size_divisible_by .... 128.........................default
  mamba_causal_conv_fusion ........ False.......................default
  mamba_inner_func_fusion ......... False.......................default
  mamba_selective_fp32_params ..... True........................default
  mamba_selective_scan_fusion ..... False.......................default
  mamba_use_bias_in_conv .......... True........................default
  mamba_use_bias_in_linears ....... False.......................default
  master_addr ..................... None........................default
  master_port ..................... 29500.......................default
  maximum_tokens .................. 64..........................default
  memory_profiling ................ False.......................default
  memory_profiling_path ........... None........................default
  merge_file ...................... None........................default
  min_scale ....................... 1.0.........................default
  mlp_type ........................ regular.....................default
  mmap_warmup ..................... False.......................default
  model_parallel_size ............. 1...........................default
  moe_eval_capacity_factor ........ 1.0.........................default
  moe_expert_parallel_size ........ 1...........................default
  moe_glu ......................... False.......................default
  moe_jitter_eps .................. None........................default
  moe_lbl_in_fp32 ................. False.......................default
  moe_loss_coeff .................. 0.1.........................default
  moe_min_capacity ................ 4...........................default
  moe_num_experts ................. 1...........................default
  moe_token_dropping .............. False.......................default
  moe_top_k ....................... 1...........................default
  moe_train_capacity_factor ....... 1.0.........................default
  moe_type ........................ megablocks..................default
  moe_use_residual ................ True........................default
  mup_attn_temp ................... 1.0.........................default
  mup_embedding_mult .............. 1.0.........................default
  mup_init_scale .................. 1.0.........................default
  mup_output_temp ................. 1.0.........................default
  mup_rp_embedding_mult ........... 1.0.........................default
  mup_width_scale ................. 2...........................default
  no_load_optim ................... False.......................default
  no_load_rng ..................... False.......................default
  no_save_optim ................... False.......................default
  no_save_rng ..................... False.......................default
  no_ssh_check .................... False.......................default
  norm ............................ layernorm...................default
  num_gpus ........................ None........................default
  num_kv_heads .................... None........................default
  num_nodes ....................... -1..........................default
  num_samples ..................... 1...........................default
  num_unique_layers ............... None........................default
  onnx_safe ....................... False.......................default
  opt_pos_emb_offset .............. 0...........................default
  output_layer_parallelism ........ column......................default
  override_lr_scheduler ........... False.......................default
  pack_impl ....................... packed......................default
  padded_vocab_size ............... None........................default
  PADDING_ID ...................... 0...........................default
  param_sharing_style ............. grouped.....................default
  pipe_partition_method ........... type:transformer|mlp........default
  prefill_k ....................... 0...........................default
  prefill_local_window_size ....... 256.........................default
  prescale_gradients .............. False.......................default
  print_ratio_intervals ........... 8000........................default
  profile ......................... False.......................default
  profile_backward ................ False.......................default
  profile_step_start .............. 10..........................default
  profile_step_stop ............... 12..........................default
  prompt_end ...................... 
...........................default
  rank ............................ None........................default
  recompute ....................... False.......................default
  return_logits ................... False.......................default
  rms_norm_epsilon ................ 1e-08.......................default
  rope_fusion ..................... False.......................default
  rotary_emb_base ................. 10000.......................default
  rotary_save_freqs_buffer ........ False.......................default
  rpe_max_distance ................ 128.........................default
  rpe_num_buckets ................. 32..........................default
  s3_chunk_size ................... 104857600...................default
  s3_path ......................... None........................default
  SA_Denominator_Bias ............. 1e-10.......................default
  SA_Numerator_Bias ............... 0.0.........................default
  sample_input_file ............... None........................default
  sample_output_file .............. samples.txt.................default
  save ............................ None........................default
  save_base_shapes ................ False.......................default
  scaled_upper_triang_masked_softmax_fusion  False..............default
  scalenorm_epsilon ............... 1e-08.......................default
  scheduler ....................... None........................default
  seed ............................ 1234........................default
  sequence_parallel ............... False.......................default
  short_seq_prob .................. 0.1.........................default
  sliding_window_width ............ None........................default
  soft_prompt_tuning .............. None........................default
  sparse_attention ................ None........................default
  sparse_gradients ................ False.......................default
  split ........................... 969, 30, 1..................default
  steps_per_print ................. 10..........................default
  streamingLLM .................... False.......................default
  temperature ..................... 0.0.........................default
  tensorboard ..................... None........................default
  tensorboard_dir ................. None........................default
  test_label_data_paths ........... None........................default
  top_k ........................... 0...........................default
  top_p ........................... 0.0.........................default
  train_label_data_paths .......... None........................default
  use_bias_in_attn_linear ......... True........................default
  use_bias_in_norms ............... True........................default
  use_bnb_optimizer ............... False.......................default
  use_checkpoint_lr_scheduler ..... False.......................default
  use_cpu_initialization .......... False.......................default
  use_mup ......................... False.......................default
  USE_ORIGINAL_FULL_ATTEN ......... False.......................default
  use_qk_layernorm ................ False.......................default
  USE_SA_SOFTMAX .................. False.......................default
  USE_SA_SOFTMAX_NO_DENO .......... False.......................default
  USE_SEP_ATTN_KERNEL_ACCELERATOR . True........................default
  use_shared_fs ................... True........................default
  use_tutel ....................... False.......................default
  use_wandb ....................... None........................default
  valid_label_data_paths .......... None........................default
  wandb ........................... None........................default
  wandb_group ..................... None........................default
  wandb_host ...................... https://api.wandb.ai........default
  wandb_init_all_ranks ............ False.......................default
  wandb_project ................... neox........................default
  wandb_team ...................... None........................default
  warmup .......................... 0.01........................default
  weight_by_num_documents ......... False.......................default
  weight_decay .................... 0.1.........................default
  weighted_sampler_alpha .......... 1.0.........................default
  world_size ...................... None........................default
---------------- end of arguments ----------------
Warnings: It is recommended to set the value of generate_win_loc_size_list=[2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048] to be the same as prefill_loc_win_size_list=[2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048], even though generate_win_loc_size_list does not have any effect during the pretraining/prefilling phase.
NeoXArgs.configure_distributed_args() using world size: 1 and model-parallel size: 1 
[2024-12-28 09:49:31,126] [WARNING] [runner.py:212:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
[2024-12-28 09:49:31,126] [INFO] [runner.py:585:main] cmd = /home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbMCwgMSwgMiwgMywgNCwgNSwgNiwgN119 --master_addr=127.0.0.1 --master_port=29500 --enable_each_rank_log=None ../../train.py --deepspeed_config eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9 --megatron_config 
[2024-12-28 09:49:33,251] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
[2024-12-28 09:49:36,086] [INFO] [launch.py:146:main] WORLD INFO DICT: {'localhost': [0, 1, 2, 3, 4, 5, 6, 7]}
[2024-12-28 09:49:36,086] [INFO] [launch.py:152:main] nnodes=1, num_local_procs=8, node_rank=0
[2024-12-28 09:49:36,086] [INFO] [launch.py:163:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0, 1, 2, 3, 4, 5, 6, 7]})
[2024-12-28 09:49:36,086] [INFO] [launch.py:164:main] dist_world_size=8
[2024-12-28 09:49:36,086] [INFO] [launch.py:168:main] Setting CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7
[2024-12-28 09:49:36,087] [INFO] [launch.py:256:main] process 2202666 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=0', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,088] [INFO] [launch.py:256:main] process 2202667 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=1', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,089] [INFO] [launch.py:256:main] process 2202668 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=2', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,090] [INFO] [launch.py:256:main] process 2202669 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=3', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,091] [INFO] [launch.py:256:main] process 2202670 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=4', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,092] [INFO] [launch.py:256:main] process 2202671 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=5', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,093] [INFO] [launch.py:256:main] process 2202672 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=6', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:36,094] [INFO] [launch.py:256:main] process 2202673 spawned with command: ['/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/bin/python', '-u', '../../train.py', '--local_rank=7', '--deepspeed_config', 'eyJ0cmFpbl9iYXRjaF9zaXplIjogMTAyNCwgInRyYWluX21pY3JvX2JhdGNoX3NpemVfcGVyX2dwdSI6IDMyLCAiZ3JhZGllbnRfYWNjdW11bGF0aW9uX3N0ZXBzIjogNCwgIm9wdGltaXplciI6IHsidHlwZSI6ICJBZGFtIiwgInBhcmFtcyI6IHsibHIiOiAwLjAwMDYsICJiZXRhcyI6IFswLjksIDAuOTVdLCAiZXBzIjogMWUtMDh9fSwgImZwMTYiOiB7ImZwMTYiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJsb3NzX3NjYWxlIjogMCwgImxvc3Nfc2NhbGVfd2luZG93IjogMTAwMCwgImluaXRpYWxfc2NhbGVfcG93ZXIiOiAxMiwgImh5c3RlcmVzaXMiOiAyLCAibWluX2xvc3Nfc2NhbGUiOiAxfSwgInplcm9fb3B0aW1pemF0aW9uIjogeyJzdGFnZSI6IDEsICJhbGxnYXRoZXJfcGFydGl0aW9ucyI6IHRydWUsICJhbGxnYXRoZXJfYnVja2V0X3NpemUiOiA1MDAwMDAwMDAsICJvdmVybGFwX2NvbW0iOiB0cnVlLCAicmVkdWNlX3NjYXR0ZXIiOiB0cnVlLCAicmVkdWNlX2J1Y2tldF9zaXplIjogNTAwMDAwMDAwLCAiY29udGlndW91c19ncmFkaWVudHMiOiB0cnVlLCAiY3B1X29mZmxvYWQiOiBmYWxzZX0sICJ3YWxsX2Nsb2NrX2JyZWFrZG93biI6IHRydWV9', '--megatron_config', '']
[2024-12-28 09:49:40,145] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,155] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,172] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,376] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,385] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,533] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,577] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2024-12-28 09:49:40,613] [INFO] [real_accelerator.py:203:get_accelerator] Setting ds_accelerator to cuda (auto detect)
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
Warning: The default cache directory for DeepSpeed Triton autotune, /home/txiao/.triton/autotune, appears to be on an NFS system. While this is generally acceptable, if you experience slowdowns or hanging when DeepSpeed exits, it is recommended to set the TRITON_CACHE_DIR environment variable to a non-NFS path.
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:49: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/deepspeed/runtime/zero/linear.py:67: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
fatal: not a git repository (or any parent up to mount point /lustre)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
Unable to import Mamba kernels. Install them from our requirements/requirements-mamba.txt,     or directly from https://github.com/state-spaces/mamba
For s3 checkpointing, please install boto3 either using requirements/requirements-s3.txt or https://github.com/boto/boto3
For s3 checkpointing, please install hf_transfer either using requirements/requirements-s3.txt or https://github.com/huggingface/hf_transfer
NeoXArgs.configure_distributed_args() using world size: 8 and model-parallel size: 1 
> building HFTokenizer tokenizer ...
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
 > padded vocab (size: 50277) with 27 dummy tokens (new size: 50304)
########################### Basic Args for SepAttention ############################################
self.USE_PREFILL_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.prefill_loc_win_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.USE_GENERATE_LOCAL_WIN_SIZES_wrt_LAYERS:  True
self.generate_win_loc_size_list: [2048, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 2048]
self.Layer_num: 12
self.init_tok_max_idx: 2
self.USE_ORIGINAL_FULL_ATTEN:  False
self.streamingLLM:  False
self.USE_SEP_ATTN_KERNEL_ACCELERATOR:  True
self.RECOMPILE_SEP_ATTN_KERNEL:  True
self.BATCH_ADAPTIVE_INIT_POS:  False
self.PRINT_KV_RATIO:  True
self.print_ratio_intervals:  8000
>>> Please be careful of the separator_token_ids, Make sure they are correct for the current LLM
self.separator_token_ids: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.USE_BiPE: True
self.BiPE_seps: [15, 13, 32, 2, 28, 27, 209, 186, 187]
self.EXCLUDE_DIAGONAL:  True
>>>>>>>>---------##########################################################-----------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>--------------------- Running our SepLLM strategy ----------------------------<<<<<<<<
>>>>>>>>---------                                                          -----------<<<<<<<<
>>>>>>>>---------##########################################################-----------<<<<<<<<
wandb: Using wandb-core as the SDK backend. Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: guoxchen (guoxchen-hku). Use `wandb login --relogin` to force relogin
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
wandb: Tracking run with wandb version 0.18.1
wandb: Run data is saved locally in /lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/training_examples/example160m_n64HT_kernel_recompile_alibiBiPE/wandb/run-20241228_094945-fbkcygrg
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run still-paper-373
wandb: ⭐️ View project at https://wandb.ai/guoxchen-hku/neox
wandb: 🚀 View run at https://wandb.ai/guoxchen-hku/neox/runs/fbkcygrg
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
[2024-12-28 09:49:45,685] [INFO] [comm.py:637:init_distributed] cdb=None
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
[2024-12-28 09:49:45,963] [INFO] [comm.py:637:init_distributed] cdb=None
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
[2024-12-28 09:49:46,315] [INFO] [comm.py:637:init_distributed] cdb=None
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
Loading extension module scaled_upper_triang_masked_softmax_cuda...
Detected CUDA files, patching ldflags
Emitting ninja build file /lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/fused_kernels/build/build.ninja...
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
Building extension module scaled_masked_softmax_cuda...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Loading extension module scaled_masked_softmax_cuda...
Detected CUDA files, patching ldflags
Emitting ninja build file /lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/fused_kernels/build/build.ninja...
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
Building extension module fused_rotary_positional_embedding...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Loading extension module fused_rotary_positional_embedding...
> initializing torch distributed ...
[2024-12-28 09:49:47,174] [INFO] [comm.py:637:init_distributed] cdb=None
[2024-12-28 09:49:47,174] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
[2024-12-28 09:49:47,320] [INFO] [comm.py:637:init_distributed] cdb=None
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:47,493] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:47,543] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
/home/txiao/miniconda3/envs/py39_cu121_torch251_new2/lib/python3.10/site-packages/torch/utils/cpp_extension.py:1964: UserWarning: TORCH_CUDA_ARCH_LIST is not set, all archs for visible cards are included for compilation. 
If this is not desired, please set os.environ['TORCH_CUDA_ARCH_LIST'].
  warnings.warn(
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:47,717] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
[2024-12-28 09:49:47,756] [INFO] [comm.py:637:init_distributed] cdb=None
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:47,767] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:47,996] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
[2024-12-28 09:49:48,169] [INFO] [comm.py:637:init_distributed] cdb=None
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:48,577] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
[2024-12-28 09:49:48,812] [INFO] [comm.py:637:init_distributed] cdb=None
> initializing model parallel with size 1
MPU DP: [0, 1, 2, 3, 4, 5, 6, 7]
MPU PP: [0]
MPU PP: [1]
MPU PP: [2]
MPU PP: [3]
MPU PP: [4]
MPU PP: [5]
MPU PP: [6]
MPU PP: [7]
MPU MP: [0]
MPU MP: [1]
MPU MP: [2]
MPU MP: [3]
MPU MP: [4]
MPU MP: [5]
MPU MP: [6]
MPU MP: [7]
> setting random seeds to 1234 ...
[2024-12-28 09:49:48,832] [INFO] [checkpointing.py:229:model_parallel_cuda_manual_seed] > initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 3952 and data parallel seed: 1234
make: Entering directory '/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data'
make: Nothing to be done for 'default'.
make: Leaving directory '/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data'
WARNING: APEX not installed - defaulting to deepspeed's fused adam
[2024-12-28 09:49:49,354] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
building GPT2 model ...
SEED_LAYERS=False BASE_SEED=1234 SEED_FN=None
Using topology: {ProcessCoord(pipe=0, data=0, model=0): 0, ProcessCoord(pipe=0, data=1, model=0): 1, ProcessCoord(pipe=0, data=2, model=0): 2, ProcessCoord(pipe=0, data=3, model=0): 3, ProcessCoord(pipe=0, data=4, model=0): 4, ProcessCoord(pipe=0, data=5, model=0): 5, ProcessCoord(pipe=0, data=6, model=0): 6, ProcessCoord(pipe=0, data=7, model=0): 7}
[2024-12-28 09:49:49,738] [INFO] [module.py:392:_partition_layers] Partitioning pipeline stages with method type:transformer|mlp
stage=0 layers=17
     0: EmbeddingPipe
     1: <megatron.model.gpt2_model._pre_transformer_block object at 0x14fee0ac6500>
     2: ParallelTransformerLayerPipe
     3: ParallelTransformerLayerPipe
     4: ParallelTransformerLayerPipe
     5: ParallelTransformerLayerPipe
     6: ParallelTransformerLayerPipe
     7: ParallelTransformerLayerPipe
     8: ParallelTransformerLayerPipe
     9: ParallelTransformerLayerPipe
    10: ParallelTransformerLayerPipe
    11: ParallelTransformerLayerPipe
    12: ParallelTransformerLayerPipe
    13: ParallelTransformerLayerPipe
    14: <megatron.model.gpt2_model._post_transformer_block object at 0x14fee0ac7700>
    15: NormPipe
    16: ParallelLinearPipe
  loss: partial
Configuring Optimizer type: Adam with params: {'lr': 0.0006, 'betas': [0.9, 0.95], 'eps': 1e-08}
WARNING: APEX not installed - defaulting to deepspeed's fused adam
> learning rate decay style: cosine
DeepSpeed is enabled.
[2024-12-28 09:49:49,846] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed info: version=0.14.5+unknown, git-hash=unknown, git-branch=unknown
[2024-12-28 09:49:49,847] [WARNING] [config_utils.py:69:_process_deprecated_field] Config parameter cpu_offload is deprecated use offload_optimizer instead
[2024-12-28 09:50:06,907] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,948] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,948] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,948] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,950] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Flops Profiler Enabled: False
[2024-12-28 09:50:06,951] [INFO] [logging.py:96:log_dist] [Rank 0] Using client Optimizer as basic optimizer
[2024-12-28 09:50:06,951] [INFO] [logging.py:96:log_dist] [Rank 0] Removing param_group that has no 'params' in the basic Optimizer
[2024-12-28 09:50:06,951] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,952] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,953] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Basic Optimizer = FusedAdam
[2024-12-28 09:50:06,953] [INFO] [utils.py:59:is_zero_supported_optimizer] Checking ZeRO support for optimizer=FusedAdam type=<class 'deepspeed.ops.adam.fused_adam.FusedAdam'>
[2024-12-28 09:50:06,953] [INFO] [logging.py:96:log_dist] [Rank 0] Creating torch.float16 ZeRO stage 1 optimizer
[2024-12-28 09:50:06,953] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:06,953] [INFO] [stage_1_and_2.py:148:__init__] Reduce bucket size 500000000
[2024-12-28 09:50:06,953] [INFO] [stage_1_and_2.py:149:__init__] Allgather bucket size 500000000
[2024-12-28 09:50:06,953] [INFO] [stage_1_and_2.py:150:__init__] CPU Offload: False
[2024-12-28 09:50:06,953] [INFO] [stage_1_and_2.py:151:__init__] Round robin gradient partitioning: False
[2024-12-28 09:50:06,965] [WARNING] [engine.py:1549:_configure_zero_optimizer] Pipeline parallelism does not support overlapped communication, will be disabled.
[2024-12-28 09:50:11,035] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,162] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,267] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,268] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,272] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,315] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,327] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:11,356] [INFO] [utils.py:781:see_memory_usage] Before initializing optimizer states
[2024-12-28 09:50:11,357] [INFO] [utils.py:782:see_memory_usage] MA 0.38 GB         Max_MA 0.38 GB         CA 0.39 GB         Max_CA 0 GB 
[2024-12-28 09:50:11,358] [INFO] [utils.py:789:see_memory_usage] CPU Virtual Memory:  used = 10.13 GB, percent = 3.5%
[2024-12-28 09:50:11,508] [INFO] [utils.py:781:see_memory_usage] After initializing optimizer states
[2024-12-28 09:50:11,509] [INFO] [utils.py:782:see_memory_usage] MA 0.38 GB         Max_MA 0.46 GB         CA 0.46 GB         Max_CA 0 GB 
[2024-12-28 09:50:11,510] [INFO] [utils.py:789:see_memory_usage] CPU Virtual Memory:  used = 10.13 GB, percent = 3.5%
[2024-12-28 09:50:11,510] [INFO] [stage_1_and_2.py:543:__init__] optimizer state initialized
[2024-12-28 09:50:11,649] [INFO] [utils.py:781:see_memory_usage] After initializing ZeRO optimizer
[2024-12-28 09:50:11,650] [INFO] [utils.py:782:see_memory_usage] MA 0.38 GB         Max_MA 0.38 GB         CA 0.46 GB         Max_CA 0 GB 
[2024-12-28 09:50:11,651] [INFO] [utils.py:789:see_memory_usage] CPU Virtual Memory:  used = 10.13 GB, percent = 3.5%
[2024-12-28 09:50:11,652] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed Final Optimizer = DeepSpeedZeroOptimizer
[2024-12-28 09:50:11,652] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed using client LR scheduler
[2024-12-28 09:50:11,652] [INFO] [logging.py:96:log_dist] [Rank 0] DeepSpeed LR Scheduler = <megatron.learning_rates.AnnealingLR object at 0x14fee0aaa350>
[2024-12-28 09:50:11,652] [INFO] [logging.py:96:log_dist] [Rank 0] step=0, skipped=0, lr=[0.0, 0.0], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:50:11,652] [INFO] [config.py:997:print] DeepSpeedEngine configuration:
[2024-12-28 09:50:11,652] [INFO] [config.py:1001:print]   activation_checkpointing_config  {
    "partition_activations": false, 
    "contiguous_memory_optimization": false, 
    "cpu_checkpointing": false, 
    "number_checkpoints": null, 
    "synchronize_checkpoint_boundary": false, 
    "profile": false
}
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   aio_config ................... {'block_size': 1048576, 'queue_depth': 8, 'thread_count': 1, 'single_submit': False, 'overlap_events': True}
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   amp_enabled .................. False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   amp_params ................... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   autotuning_config ............ {
    "enabled": false, 
    "start_step": null, 
    "end_step": null, 
    "metric_path": null, 
    "arg_mappings": null, 
    "metric": "throughput", 
    "model_info": null, 
    "results_dir": "autotuning_results", 
    "exps_dir": "autotuning_exps", 
    "overwrite": true, 
    "fast": true, 
    "start_profile_step": 3, 
    "end_profile_step": 5, 
    "tuner_type": "gridsearch", 
    "tuner_early_stopping": 5, 
    "tuner_num_trials": 50, 
    "model_info_path": null, 
    "mp_size": 1, 
    "max_train_batch_size": null, 
    "min_train_batch_size": 1, 
    "max_train_micro_batch_size_per_gpu": 1.024000e+03, 
    "min_train_micro_batch_size_per_gpu": 1, 
    "num_tuning_micro_batch_sizes": 3
}
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   bfloat16_enabled ............. False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   bfloat16_immediate_grad_update  False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   checkpoint_parallel_write_pipeline  False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   checkpoint_tag_validation_enabled  True
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   checkpoint_tag_validation_fail  False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   comms_config ................. <deepspeed.comm.config.DeepSpeedCommsConfig object at 0x14fee0aa9ed0>
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   communication_data_type ...... None
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   compression_config ........... {'weight_quantization': {'shared_parameters': {'enabled': False, 'quantizer_kernel': False, 'schedule_offset': 0, 'quantize_groups': 1, 'quantize_verbose': False, 'quantization_type': 'symmetric', 'quantize_weight_in_forward': False, 'rounding': 'nearest', 'fp16_mixed_quantize': False, 'quantize_change_ratio': 0.001}, 'different_groups': {}}, 'activation_quantization': {'shared_parameters': {'enabled': False, 'quantization_type': 'symmetric', 'range_calibration': 'dynamic', 'schedule_offset': 1000}, 'different_groups': {}}, 'sparse_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'row_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'head_pruning': {'shared_parameters': {'enabled': False, 'method': 'topk', 'schedule_offset': 1000}, 'different_groups': {}}, 'channel_pruning': {'shared_parameters': {'enabled': False, 'method': 'l1', 'schedule_offset': 1000}, 'different_groups': {}}, 'layer_reduction': {'enabled': False}}
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   curriculum_enabled_legacy .... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   curriculum_params_legacy ..... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   data_efficiency_config ....... {'enabled': False, 'seed': 1234, 'data_sampling': {'enabled': False, 'num_epochs': 1000, 'num_workers': 0, 'curriculum_learning': {'enabled': False}}, 'data_routing': {'enabled': False, 'random_ltd': {'enabled': False, 'layer_token_lr_schedule': {'enabled': False}}}}
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   data_efficiency_enabled ...... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   dataloader_drop_last ......... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   disable_allgather ............ False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   dump_state ................... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   dynamic_loss_scale_args ...... {'init_scale': 4096, 'scale_window': 1000, 'delayed_shift': 2, 'consecutive_hysteresis': False, 'min_scale': 1}
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_enabled ........... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_gas_boundary_resolution  1
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_layer_name ........ bert.encoder.layer
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_layer_num ......... 0
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_max_iter .......... 100
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_stability ......... 1e-06
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_tol ............... 0.01
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   eigenvalue_verbose ........... False
[2024-12-28 09:50:11,653] [INFO] [config.py:1001:print]   elasticity_enabled ........... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   flops_profiler_config ........ {
    "enabled": false, 
    "recompute_fwd_factor": 0.0, 
    "profile_step": 1, 
    "module_depth": -1, 
    "top_modules": 1, 
    "detailed": true, 
    "output_file": null
}
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   fp16_auto_cast ............... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   fp16_enabled ................. True
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   fp16_master_weights_and_gradients  False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   global_rank .................. 0
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   grad_accum_dtype ............. None
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   gradient_accumulation_steps .. 4
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   gradient_clipping ............ 0.0
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   gradient_predivide_factor .... 1.0
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   graph_harvesting ............. False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   hybrid_engine ................ enabled=False max_out_tokens=512 inference_tp_size=1 release_inference_cache=False pin_parameters=True tp_gather_partition_size=8
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   initial_dynamic_scale ........ 4096
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   load_universal_checkpoint .... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   loss_scale ................... 0
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   memory_breakdown ............. False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   mics_hierarchial_params_gather  False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   mics_shard_size .............. -1
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   monitor_config ............... tensorboard=TensorBoardConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') comet=CometConfig(enabled=False, samples_log_interval=100, project=None, workspace=None, api_key=None, experiment_name=None, experiment_key=None, online=None, mode=None) wandb=WandbConfig(enabled=False, group=None, team=None, project='deepspeed') csv_monitor=CSVConfig(enabled=False, output_path='', job_name='DeepSpeedJobName') enabled=False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   nebula_config ................ {
    "enabled": false, 
    "persistent_storage_path": null, 
    "persistent_time_interval": 100, 
    "num_of_version_in_retention": 2, 
    "enable_nebula_load": true, 
    "load_path": null
}
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   optimizer_legacy_fusion ...... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   optimizer_name ............... adam
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   optimizer_params ............. {'lr': 0.0006, 'betas': [0.9, 0.95], 'eps': 1e-08}
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   pipeline ..................... {'stages': 'auto', 'partition': 'best', 'seed_layers': False, 'activation_checkpoint_interval': 0, 'pipe_partitioned': True, 'grad_partitioned': True}
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   pld_enabled .................. False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   pld_params ................... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   prescale_gradients ........... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   scheduler_name ............... None
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   scheduler_params ............. None
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   seq_parallel_communication_data_type  torch.float32
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   sparse_attention ............. None
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   sparse_gradients_enabled ..... False
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   steps_per_print .............. 10
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   timers_config ................ enabled=True synchronized=True
[2024-12-28 09:50:11,654] [INFO] [config.py:1001:print]   train_batch_size ............. 1024
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   train_micro_batch_size_per_gpu  32
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   use_data_before_expert_parallel_  False
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   use_node_local_storage ....... False
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   wall_clock_breakdown ......... True
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   weight_quantization_config ... None
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   world_size ................... 8
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   zero_allow_untested_optimizer  False
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   zero_config .................. stage=1 contiguous_gradients=True reduce_scatter=True reduce_bucket_size=500000000 use_multi_rank_bucket_allreduce=True allgather_partitions=True allgather_bucket_size=500000000 overlap_comm=True load_from_fp32_weights=True elastic_checkpoint=False offload_param=None offload_optimizer=None sub_group_size=1,000,000,000 cpu_offload_param=None cpu_offload_use_pin_memory=None prefetch_bucket_size=50,000,000 param_persistence_threshold=100,000 model_persistence_threshold=sys.maxsize max_live_parameters=1,000,000,000 max_reuse_distance=1,000,000,000 gather_16bit_weights_on_model_save=False use_all_reduce_for_fetch_params=False stage3_gather_fp16_weights_on_model_save=False ignore_unused_parameters=True legacy_stage1=False round_robin_gradients=False zero_hpz_partition_size=1 zero_quantized_weights=False zero_quantized_nontrainable_weights=False zero_quantized_gradients=False mics_shard_size=-1 mics_hierarchical_params_gather=False memory_efficient_linear=True pipeline_loading_checkpoint=False override_module_apply=True
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   zero_enabled ................. True
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   zero_force_ds_cpu_optimizer .. True
[2024-12-28 09:50:11,655] [INFO] [config.py:1001:print]   zero_optimization_stage ...... 1
[2024-12-28 09:50:11,655] [INFO] [config.py:987:print_user_config]   json = {
    "train_batch_size": 1.024000e+03, 
    "train_micro_batch_size_per_gpu": 32, 
    "gradient_accumulation_steps": 4, 
    "optimizer": {
        "type": "Adam", 
        "params": {
            "lr": 0.0006, 
            "betas": [0.9, 0.95], 
            "eps": 1e-08
        }
    }, 
    "fp16": {
        "fp16": true, 
        "enabled": true, 
        "loss_scale": 0, 
        "loss_scale_window": 1000, 
        "initial_scale_power": 12, 
        "hysteresis": 2, 
        "min_loss_scale": 1
    }, 
    "zero_optimization": {
        "stage": 1, 
        "allgather_partitions": true, 
        "allgather_bucket_size": 5.000000e+08, 
        "overlap_comm": true, 
        "reduce_scatter": true, 
        "reduce_bucket_size": 5.000000e+08, 
        "contiguous_gradients": true, 
        "cpu_offload": false
    }, 
    "wall_clock_breakdown": true
}
[2024-12-28 09:50:11,655] [INFO] [engine.py:100:__init__] CONFIG: micro_batches=4 micro_batch_size=32
[2024-12-28 09:50:11,655] [INFO] [engine.py:141:__init__] is_pipe_partitioned= False is_grad_partitioned= False
[2024-12-28 09:50:12,469] [INFO] [engine.py:160:__init__] RANK=0 STAGE=0 LAYERS=17 [0, 17) STAGE_PARAMS=163895808 (163.896M) TOTAL_PARAMS=163895808 (163.896M) UNIQUE_PARAMS=163895808 (163.896M)
 > number of parameters on model parallel rank 0: 163895808
 > total params: 163,895,808
> building train, validation, and test datasets ...
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...
    train_0:
     no. of documents:134318121
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
/lustre/fast/fast/txiao/shihan_new/workspace/SepLLM/Training-SepLLM/megatron/data/gpt2_dataset.py:338: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at ../torch/csrc/tensor/python_tensor.cpp:78.)
  counts = torch.cuda.LongTensor([1])
 > loading doc-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_train_0_indexmap_147164160ns_2048sl_1234s_packedpi_ac_doc_idx.npy
 > loading sample-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_train_0_indexmap_147164160ns_2048sl_1234s_packedpi_ac_sample_idx.npy
 > loading shuffle-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_train_0_indexmap_147164160ns_2048sl_1234s_packedpi_ac_shuffle_idx.npy
    loaded indexed file in 0.014 seconds
    total number of samples: 202314858
    total number of epochs: 2
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...
    valid_0:
     no. of documents:134318121
 > loading doc-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_valid_0_indexmap_370484ns_2048sl_1234s_packedpi_ac_doc_idx.npy
 > loading sample-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_valid_0_indexmap_370484ns_2048sl_1234s_packedpi_ac_sample_idx.npy
 > loading shuffle-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_valid_0_indexmap_370484ns_2048sl_1234s_packedpi_ac_shuffle_idx.npy
    loaded indexed file in 0.013 seconds
    total number of samples: 101157429
    total number of epochs: 1
    reading sizes...
    reading pointers...
    reading document index...
    creating numpy buffer of mmap...
    creating memory view of numpy buffer...
    test_0:
     no. of documents:134318121
 > loading doc-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_test_0_indexmap_10292ns_2048sl_1234s_packedpi_ac_doc_idx.npy
 > loading sample-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_test_0_indexmap_10292ns_2048sl_1234s_packedpi_ac_sample_idx.npy
 > loading shuffle-idx mapping from /lustre/fast/fast/txiao/shihan/compressed_pythia_data/pile_0.87_deduped_text_document_test_0_indexmap_10292ns_2048sl_1234s_packedpi_ac_shuffle_idx.npy
    loaded indexed file in 0.015 seconds
    total number of samples: 101157429
    total number of epochs: 1
> building indices for blendable datasets ...
> RANK 6 elapsed time for building blendable dataset indices: 0.62 (sec)
> RANK 4 elapsed time for building blendable dataset indices: 0.62 (sec)
> RANK 2 elapsed time for building blendable dataset indices: 0.62 (sec)
> RANK 7 elapsed time for building blendable dataset indices: 0.62 (sec)
> RANK 1 elapsed time for building blendable dataset indices: 0.62 (sec)
> RANK 5 elapsed time for building blendable dataset indices: 0.62 (sec)
> RANK 3 elapsed time for building blendable dataset indices: 0.63 (sec)
 > sample ratios:
   dataset 0, input: 1, achieved: 1
> RANK 0 elapsed time for building blendable dataset indices: 0.63 (sec)
> building indices for blendable datasets ...
> RANK 6 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 4 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 2 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 7 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 1 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 5 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 3 elapsed time for building blendable dataset indices: 0.31 (sec)
 > sample ratios:
   dataset 0, input: 1, achieved: 1
> RANK 0 elapsed time for building blendable dataset indices: 0.32 (sec)
> building indices for blendable datasets ...
> RANK 6 elapsed time for building blendable dataset indices: 0.30 (sec)
> RANK 4 elapsed time for building blendable dataset indices: 0.30 (sec)
> RANK 2 elapsed time for building blendable dataset indices: 0.30 (sec)
> RANK 7 elapsed time for building blendable dataset indices: 0.30 (sec)
> RANK 1 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 5 elapsed time for building blendable dataset indices: 0.31 (sec)
> RANK 3 elapsed time for building blendable dataset indices: 0.31 (sec)
 > sample ratios:
   dataset 0, input: 1, achieved: 1
> RANK 0 elapsed time for building blendable dataset indices: 0.31 (sec)
setting training data start iteration to 0
setting validation data start iteration to 0
done with setups ...
time (ms) | model and optimizer: 34415.30 | train/valid/test data iterators: 17203.60
training ...
[2024-12-28 09:50:45,921] [INFO] [checkpointing.py:541:forward] Activation Checkpointing Information
[2024-12-28 09:50:45,921] [INFO] [checkpointing.py:542:forward] ----Partition Activations True, CPU CHECKPOINTING False
[2024-12-28 09:50:45,921] [INFO] [checkpointing.py:543:forward] ----contiguous Memory Checkpointing False with 12 total layers
[2024-12-28 09:50:45,921] [INFO] [checkpointing.py:545:forward] ----Synchronization True
[2024-12-28 09:50:45,921] [INFO] [checkpointing.py:546:forward] ----Profiling time in checkpointing False
[2024-12-28 09:50:51,191] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.23 | optimizer_gradients: 0.24 | optimizer_step: 0.73
[2024-12-28 09:50:54,394] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.89 | optimizer_gradients: 0.22 | optimizer_step: 0.45
[2024-12-28 09:50:57,000] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.34
[2024-12-28 09:50:59,614] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.06 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:02,243] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.19 | optimizer_step: 0.33
[2024-12-28 09:51:04,847] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:07,484] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.02 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:10,116] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:51:12,719] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.02 | optimizer_gradients: 0.17 | optimizer_step: 0.35
[2024-12-28 09:51:15,363] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:51:15,364] [INFO] [logging.py:96:log_dist] [Rank 0] step=10, skipped=0, lr=[4.195804195804195e-06, 4.195804195804195e-06], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:51:15,367] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 3070.85 | fwd_microstep: 12082.45 | bwd_microstep: 14805.53 | bwd_inner_microstep: 14803.84 | bwd_allreduce_microstep: 0.43 | step_microstep: 132.39
[2024-12-28 09:51:15,369] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 12082.06 | bwd: 14805.59 | bwd_inner: 14804.02 | bwd_allreduce: 0.43 | step: 132.48
steps: 10 loss: 10.4796 iter time (s): 3.296 samples/sec: 310.636
[2024-12-28 09:51:15,369] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 301.064 | iteration       10/  143000 | elapsed time per iteration (ms): 3401.3 | learning rate: 4.196E-06 | approx flops per GPU: 93.5TFLOPS | lm_loss: 1.081894E+01 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
after 10 iterations memory (MB) | allocated: 13199.07861328125 | max allocated: 34936.57177734375 | reserved: 43574.0 | max reserved: 43574.0
time (ms)
[2024-12-28 09:51:17,999] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:20,628] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:51:23,267] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.95 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:51:25,887] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.18 | optimizer_step: 0.32
[2024-12-28 09:51:28,516] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.02 | optimizer_gradients: 0.17 | optimizer_step: 0.31
[2024-12-28 09:51:31,148] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:33,767] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.94 | optimizer_gradients: 0.17 | optimizer_step: 0.34
[2024-12-28 09:51:36,381] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:51:38,968] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.95 | optimizer_gradients: 0.17 | optimizer_step: 0.34
[2024-12-28 09:51:41,574] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.49 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:41,574] [INFO] [logging.py:96:log_dist] [Rank 0] step=20, skipped=0, lr=[8.39160839160839e-06, 8.39160839160839e-06], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:51:41,577] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1627.14 | fwd_microstep: 8298.40 | bwd_microstep: 13820.84 | bwd_inner_microstep: 13818.56 | bwd_allreduce_microstep: 0.55 | step_microstep: 50.89
[2024-12-28 09:51:41,579] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8298.06 | bwd: 13821.01 | bwd_inner: 13818.98 | bwd_allreduce: 0.58 | step: 50.99
steps: 20 loss: 9.8550 iter time (s): 2.591 samples/sec: 395.182
[2024-12-28 09:51:41,580] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 390.690 | iteration       20/  143000 | elapsed time per iteration (ms): 2621.0 | learning rate: 8.392E-06 | approx flops per GPU: 121.3TFLOPS | lm_loss: 1.009280E+01 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:51:44,195] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.95 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:51:46,782] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.18 | optimizer_step: 0.33
[2024-12-28 09:51:49,370] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.31 | optimizer_step: 0.55
[2024-12-28 09:51:51,951] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.02 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:54,579] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:51:57,182] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.93 | optimizer_gradients: 0.17 | optimizer_step: 0.37
[2024-12-28 09:51:59,788] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.78 | optimizer_gradients: 0.18 | optimizer_step: 0.33
[2024-12-28 09:52:02,420] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:05,018] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.76 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:07,632] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.94 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:07,632] [INFO] [logging.py:96:log_dist] [Rank 0] step=30, skipped=0, lr=[1.2587412587412587e-05, 1.2587412587412587e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:52:07,635] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1398.52 | fwd_microstep: 8434.36 | bwd_microstep: 13624.18 | bwd_inner_microstep: 13622.40 | bwd_allreduce_microstep: 0.44 | step_microstep: 53.27
[2024-12-28 09:52:07,637] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8434.03 | bwd: 13624.29 | bwd_inner: 13622.66 | bwd_allreduce: 0.44 | step: 53.35
steps: 30 loss: 9.6255 iter time (s): 2.579 samples/sec: 397.117
[2024-12-28 09:52:07,638] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 392.971 | iteration       30/  143000 | elapsed time per iteration (ms): 2605.8 | learning rate: 1.259E-05 | approx flops per GPU: 122.1TFLOPS | lm_loss: 9.716632E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:52:10,260] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:12,843] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:15,503] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.55 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:18,115] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.09 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:20,717] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.39 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:23,351] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.18 | optimizer_step: 0.36
[2024-12-28 09:52:25,956] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.00 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:28,579] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:31,169] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.01 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:33,809] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.77 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:33,810] [INFO] [logging.py:96:log_dist] [Rank 0] step=40, skipped=0, lr=[1.678321678321678e-05, 1.678321678321678e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:52:33,813] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1648.31 | fwd_microstep: 8500.53 | bwd_microstep: 13663.68 | bwd_inner_microstep: 13661.85 | bwd_allreduce_microstep: 0.45 | step_microstep: 52.98
[2024-12-28 09:52:33,815] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8500.20 | bwd: 13663.78 | bwd_inner: 13662.14 | bwd_allreduce: 0.44 | step: 53.06
steps: 40 loss: 9.5037 iter time (s): 2.606 samples/sec: 392.958
[2024-12-28 09:52:33,815] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 391.169 | iteration       40/  143000 | elapsed time per iteration (ms): 2617.8 | learning rate: 1.678E-05 | approx flops per GPU: 121.5TFLOPS | lm_loss: 9.543254E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:52:36,439] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:39,048] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.00 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:52:41,699] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.31
[2024-12-28 09:52:44,324] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.01 | optimizer_gradients: 0.17 | optimizer_step: 0.35
[2024-12-28 09:52:46,979] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.18 | optimizer_step: 0.33
[2024-12-28 09:52:49,606] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.52 | optimizer_gradients: 0.17 | optimizer_step: 0.34
[2024-12-28 09:52:52,223] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.93 | optimizer_gradients: 0.17 | optimizer_step: 0.31
[2024-12-28 09:52:54,851] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:52:57,477] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.40 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:00,111] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.93 | optimizer_gradients: 0.17 | optimizer_step: 0.31
[2024-12-28 09:53:00,111] [INFO] [logging.py:96:log_dist] [Rank 0] step=50, skipped=0, lr=[2.0979020979020977e-05, 2.0979020979020977e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:53:00,114] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1731.51 | fwd_microstep: 8399.69 | bwd_microstep: 13701.28 | bwd_inner_microstep: 13699.46 | bwd_allreduce_microstep: 0.46 | step_microstep: 48.71
[2024-12-28 09:53:00,116] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8399.36 | bwd: 13701.39 | bwd_inner: 13699.73 | bwd_allreduce: 0.46 | step: 48.81
steps: 50 loss: 9.2965 iter time (s): 2.607 samples/sec: 392.785
[2024-12-28 09:53:00,117] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 389.331 | iteration       50/  143000 | elapsed time per iteration (ms): 2630.1 | learning rate: 2.098E-05 | approx flops per GPU: 120.9TFLOPS | lm_loss: 9.379653E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:53:02,718] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.04 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:05,353] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.39 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:07,981] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.06 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:10,603] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.18 | optimizer_step: 0.36
[2024-12-28 09:53:13,231] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:15,844] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.01 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:18,438] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:21,060] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.00 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:23,701] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.77 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:26,295] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.18 | optimizer_step: 0.32
[2024-12-28 09:53:26,295] [INFO] [logging.py:96:log_dist] [Rank 0] step=60, skipped=0, lr=[2.5174825174825174e-05, 2.5174825174825174e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:53:26,298] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1412.59 | fwd_microstep: 8536.08 | bwd_microstep: 13588.74 | bwd_inner_microstep: 13587.30 | bwd_allreduce_microstep: 0.36 | step_microstep: 53.41
[2024-12-28 09:53:26,301] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8535.73 | bwd: 13588.79 | bwd_inner: 13587.46 | bwd_allreduce: 0.35 | step: 53.49
steps: 60 loss: 9.0358 iter time (s): 2.596 samples/sec: 394.385
[2024-12-28 09:53:26,301] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 391.074 | iteration       60/  143000 | elapsed time per iteration (ms): 2618.4 | learning rate: 2.517E-05 | approx flops per GPU: 121.5TFLOPS | lm_loss: 9.165886E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:53:28,920] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.07 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:31,539] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.00 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:34,143] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.01 | optimizer_gradients: 0.17 | optimizer_step: 0.34
[2024-12-28 09:53:36,780] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:39,366] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.34
[2024-12-28 09:53:41,951] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:44,570] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.43 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:47,206] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:49,837] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:53:52,454] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.29 | optimizer_step: 0.57
[2024-12-28 09:53:52,454] [INFO] [logging.py:96:log_dist] [Rank 0] step=70, skipped=0, lr=[2.937062937062937e-05, 2.937062937062937e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:53:52,457] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1658.46 | fwd_microstep: 8358.92 | bwd_microstep: 13832.05 | bwd_inner_microstep: 13830.15 | bwd_allreduce_microstep: 0.47 | step_microstep: 46.95
[2024-12-28 09:53:52,459] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8358.59 | bwd: 13832.16 | bwd_inner: 13830.45 | bwd_allreduce: 0.48 | step: 47.05
steps: 70 loss: 8.7653 iter time (s): 2.603 samples/sec: 393.438
[2024-12-28 09:53:52,460] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 391.461 | iteration       70/  143000 | elapsed time per iteration (ms): 2615.8 | learning rate: 2.937E-05 | approx flops per GPU: 121.6TFLOPS | lm_loss: 8.909888E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:53:55,063] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:53:57,696] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:00,327] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.36
[2024-12-28 09:54:02,952] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:54:05,576] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.05 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:08,204] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:10,815] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:13,407] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.98 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:54:16,039] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:18,663] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.96 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:18,663] [INFO] [logging.py:96:log_dist] [Rank 0] step=80, skipped=0, lr=[3.356643356643356e-05, 3.356643356643356e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:54:18,666] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1485.14 | fwd_microstep: 8652.39 | bwd_microstep: 13630.14 | bwd_inner_microstep: 13628.19 | bwd_allreduce_microstep: 0.53 | step_microstep: 48.04
[2024-12-28 09:54:18,668] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8652.05 | bwd: 13630.28 | bwd_inner: 13628.45 | bwd_allreduce: 0.52 | step: 48.12
steps: 80 loss: 8.5198 iter time (s): 2.604 samples/sec: 393.289
[2024-12-28 09:54:18,669] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 390.701 | iteration       80/  143000 | elapsed time per iteration (ms): 2620.9 | learning rate: 3.357E-05 | approx flops per GPU: 121.4TFLOPS | lm_loss: 8.642422E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:54:21,280] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.07 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:54:23,912] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.01 | optimizer_gradients: 0.17 | optimizer_step: 0.38
[2024-12-28 09:54:26,505] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.73 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:29,119] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.94 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:54:31,744] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:54:34,381] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.47 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:37,004] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.99 | optimizer_gradients: 0.17 | optimizer_step: 0.33
[2024-12-28 09:54:39,621] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:42,222] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 0.97 | optimizer_gradients: 0.17 | optimizer_step: 0.32
[2024-12-28 09:54:44,836] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.01 | optimizer_gradients: 0.17 | optimizer_step: 0.38
[2024-12-28 09:54:44,837] [INFO] [logging.py:96:log_dist] [Rank 0] step=90, skipped=0, lr=[3.7762237762237757e-05, 3.7762237762237757e-05], mom=[[0.9, 0.95], [0.9, 0.95]]
[2024-12-28 09:54:44,840] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | batch_input: 1643.25 | fwd_microstep: 8290.63 | bwd_microstep: 13819.20 | bwd_inner_microstep: 13816.94 | bwd_allreduce_microstep: 0.57 | step_microstep: 52.66
[2024-12-28 09:54:44,842] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | fwd: 8290.28 | bwd: 13819.36 | bwd_inner: 13817.31 | bwd_allreduce: 0.57 | step: 52.75
steps: 90 loss: 8.2428 iter time (s): 2.599 samples/sec: 393.964
[2024-12-28 09:54:44,842] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms)
 samples/sec: 391.236 | iteration       90/  143000 | elapsed time per iteration (ms): 2617.3 | learning rate: 3.776E-05 | approx flops per GPU: 121.5TFLOPS | lm_loss: 8.366014E+00 | loss scale: 4096.0 | number of skipped iterations:   0 | number of nan iterations:   0 |
time (ms)
[2024-12-28 09:54:47,470] [INFO] [logging.py:96:log_dist] [Rank 0] time (ms) | optimizer_allgather: 1.42 | optimizer_gradients: 0.17 | optimizer_step: 0.32
